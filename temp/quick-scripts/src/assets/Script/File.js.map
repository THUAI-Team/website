{"version":3,"sources":["assets/Script/File.js"],"names":["EGG_COUNT","PLAYER_COUNT","arrayBufferToString","ab","String","fromCharCode","apply","Array","from","Uint8Array","readHeader","view","frameCount","getUint16","fps","redScore","getUint32","yellowScore","blueScore","timestampLeft","timestampRight","timestamp","Date","eggScores","eggScoresOffset","i","getUint8","readFrame","offset","playerInfo","eggInfo","id","x","getFloat32","y","enduranceZipped","push","position","eggInHand","getInt8","endurance","score","readFromRecordFile","blob","DataView","slice","header","frames","frameSizeInBytes","frameNum","cc","Class","Component","properties","onLoad","start","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nconst EGG_COUNT = 15, PLAYER_COUNT = 12;\r\nfunction arrayBufferToString(ab) {\r\n    return String.fromCharCode.apply(null, Array.from(new Uint8Array(ab)));\r\n}\r\nfunction readHeader(view) {\r\n    const frameCount = view.getUint16(8, true);\r\n    const fps = view.getUint16(10, true);\r\n    const redScore = view.getUint32(12, true), yellowScore = view.getUint32(16, true), blueScore = view.getUint32(20, true);\r\n    const timestampLeft = view.getUint32(24, true), timestampRight = view.getUint32(28, true);\r\n    const timestamp = new Date(((timestampRight * (2 ** 32)) + timestampLeft) * 1000); // s -> ms\r\n    // NOTE: code above cannot handle years < 1970, but it doesn't matter\r\n    const eggScores = [], eggScoresOffset = 32;\r\n    for (let i = 0; i < EGG_COUNT; i++) {\r\n        eggScores[i] = view.getUint8(eggScoresOffset + i);\r\n    }\r\n    return { frameCount, fps, redScore, yellowScore,\r\n        blueScore, timestamp, eggScores };\r\n}\r\nfunction readFrame(view, eggScores, offset) {\r\n    const playerInfo = [];\r\n    const eggInfo = [];\r\n    for (let id = 0; id < PLAYER_COUNT; id++) {\r\n        const x = view.getFloat32(offset + 120 + 4 * id, true), y = view.getFloat32(offset + 168 + 4 * id, true);\r\n        const enduranceZipped = view.getUint8(offset + 228 + id);\r\n        playerInfo.push({\r\n            id,\r\n            position: [x, y],\r\n            eggInHand: view.getInt8(offset + 216 + id),\r\n            endurance: enduranceZipped / 255.0 * 5.0\r\n        });\r\n    }\r\n    for (let id = 0; id < EGG_COUNT; id++) {\r\n        const x = view.getFloat32(offset + 4 * id, true), y = view.getFloat32(offset + 60 + 4 * id, true);\r\n        eggInfo.push({\r\n            id,\r\n            position: [x, y],\r\n            score: eggScores[id]\r\n        });\r\n    }\r\n    return { playerInfo, eggInfo };\r\n}\r\nfunction readFromRecordFile(blob) {\r\n    const view = new DataView(blob);\r\n    if (arrayBufferToString(blob.slice(0, 6)) !== 'THAIEG' || view.getUint16(6, true) !== 1) {\r\n        return null;\r\n    }\r\n    const header = readHeader(view);\r\n    const frames = [];\r\n    const frameSizeInBytes = 240;\r\n    for (let frameNum = 0, offset = 47; frameNum < header.frameCount; frameNum++, offset += frameSizeInBytes) {\r\n        frames.push(readFrame(view, header.eggScores, offset));\r\n    }\r\n    return { header, frames };\r\n}\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        \r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n\r\n    },\r\n});\r\n"]}